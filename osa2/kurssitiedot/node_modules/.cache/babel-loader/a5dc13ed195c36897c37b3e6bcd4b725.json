{"ast":null,"code":"var _jsxFileName = \"/home/haspe/University/full-stack-open/osa2/kurssitiedot/src/components/Total.js\";\nimport React from 'react';\n\nfunction myAddition(total, num) {\n  return total + num;\n}\n\nconst Total = props => {\n  var length = props.course.parts.length;\n  var totalExercises = 0;\n  var numbers = [];\n\n  for (var i = 0; i < length; i++) {\n    numbers.push(props.course.parts[i].exercises);\n  } // var totalAmount = orders.reduce((sum, order) => sum + order.amount, 0)\n\n\n  totalExercises = numbers.reduce(myAddition);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Number of exercises: \", totalExercises, \" \"));\n};\n\nexport default Total;","map":{"version":3,"sources":["/home/haspe/University/full-stack-open/osa2/kurssitiedot/src/components/Total.js"],"names":["React","myAddition","total","num","Total","props","length","course","parts","totalExercises","numbers","i","push","exercises","reduce"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC5B,SAAOD,KAAK,GAAGC,GAAf;AACH;;AAED,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,MAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,MAAhC;AACA,MAAIG,cAAc,GAAG,CAArB;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAApB,EAA4BK,CAAC,EAA7B,EAAiC;AAC7BD,IAAAA,OAAO,CAACE,IAAR,CAAaP,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBG,CAAnB,EAAsBE,SAAnC;AACH,GAPoB,CASrB;;;AACAJ,EAAAA,cAAc,GAAGC,OAAO,CAACI,MAAR,CAAeb,UAAf,CAAjB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBQ,cAAzB,MADF,CADF;AAKD,CAjBH;;AAmBA,eAAeL,KAAf","sourcesContent":["import React from 'react'\n\nfunction myAddition(total, num) {\n    return total + num;\n}\n\nconst Total = (props) => {\n\n    var length = props.course.parts.length;\n    var totalExercises = 0;\n    var numbers = []\n    for (var i = 0; i < length; i++) {\n        numbers.push(props.course.parts[i].exercises);\n    }\n\n    // var totalAmount = orders.reduce((sum, order) => sum + order.amount, 0)\n    totalExercises = numbers.reduce(myAddition);\n\n    return (\n      <div>\n        <b>Number of exercises: {totalExercises} </b>\n      </div>\n    )\n  }\n\nexport default Total;"]},"metadata":{},"sourceType":"module"}