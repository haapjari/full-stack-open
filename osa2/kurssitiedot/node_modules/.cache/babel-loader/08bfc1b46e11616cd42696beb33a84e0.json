{"ast":null,"code":"var _jsxFileName = \"/home/haspe/University/full-stack-open/osa2/kurssitiedot/src/components/Content.js\";\nimport React from 'react';\n\nconst Content = props => {\n  const courses = props.course;\n  /* testing how the data is laid off in JSON object */\n\n  /*\n  console.log( courses[0].name )\n  console.log( courses[0].parts[0].name )\n  console.log( courses[0].parts[0].exercises )\n   console.log( courses[1].name )\n  console.log( courses[1].parts[0].name )\n  console.log( courses[1].parts[0].exercises )\n  console.log( courses[1].parts[1].name )\n  console.log( courses[1].parts[1].exercises )\n  */\n\n  /* strategy is to create list with rendered values in special order in order to render data correctly */\n\n  var courseData = [];\n\n  for (var i = 0; i < courses.length; i++) {\n    /* first loop adds nested list to array for each course, the first key is course name which is saved as h3 */\n    var appendData = [];\n    var totalExercises = 0;\n    appendData.push( /*#__PURE__*/React.createElement(\"h3\", {\n      key: courses[i].name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    }, courses[i].name));\n    courseData.push(appendData);\n\n    for (var j = 0; j < courses[i].parts.length; j++) {\n      /* second loop fills the desired details of the course - name, exercises and keeps track of the total exercises, which is rendered last */\n      courseData[i].push( /*#__PURE__*/React.createElement(\"p\", {\n        key: courses[i].parts[j].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 30\n        }\n      }, courses[i].parts[j].name + ' ' + courses[i].parts[j].exercises));\n      totalExercises += courses[i].parts[j].exercises;\n    }\n\n    appendData.push( /*#__PURE__*/React.createElement(\"h4\", {\n      key: courses[i].id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }\n    }, \"total of \", totalExercises, \" exercises\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, courseData);\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/haspe/University/full-stack-open/osa2/kurssitiedot/src/components/Content.js"],"names":["React","Content","props","courses","course","courseData","i","length","appendData","totalExercises","push","name","j","parts","exercises","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAMC,OAAO,GAAGD,KAAK,CAACE,MAAtB;AAEA;;AAEA;;;;;;;;;;;AAYA;;AAEA,MAAIC,UAAU,GAAG,EAAjB;;AAEC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AAExC;AAEA,QAAIE,UAAU,GAAG,EAAjB;AACA,QAAIC,cAAc,GAAG,CAArB;AAEAD,IAAAA,UAAU,CAACE,IAAX,eAAgB;AAAI,MAAA,GAAG,EAAEP,OAAO,CAACG,CAAD,CAAP,CAAWK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BR,OAAO,CAACG,CAAD,CAAP,CAAWK,IAAtC,CAAhB;AACAN,IAAAA,UAAU,CAACK,IAAX,CAAgBF,UAAhB;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACG,CAAD,CAAP,CAAWO,KAAX,CAAiBN,MAArC,EAA6CK,CAAC,EAA9C,EAAkD;AAEhD;AAEEP,MAAAA,UAAU,CAACC,CAAD,CAAV,CAAcI,IAAd,eAAmB;AAAG,QAAA,GAAG,EAAEP,OAAO,CAACG,CAAD,CAAP,CAAWO,KAAX,CAAiBD,CAAjB,EAAoBD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCR,OAAO,CAACG,CAAD,CAAP,CAAWO,KAAX,CAAiBD,CAAjB,EAAoBD,IAApB,GAA2B,GAA3B,GAAiCR,OAAO,CAACG,CAAD,CAAP,CAAWO,KAAX,CAAiBD,CAAjB,EAAoBE,SAAxF,CAAnB;AACAL,MAAAA,cAAc,IAAIN,OAAO,CAACG,CAAD,CAAP,CAAWO,KAAX,CAAiBD,CAAjB,EAAoBE,SAAtC;AACH;;AACDN,IAAAA,UAAU,CAACE,IAAX,eAAgB;AAAI,MAAA,GAAG,EAAEP,OAAO,CAACG,CAAD,CAAP,CAAWS,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkCN,cAAlC,eAAhB;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,UADL,CADF;AAKD,CA/CH;;AAiDA,eAAeJ,OAAf","sourcesContent":["import React from 'react'\n\nconst Content = (props) => {\n\n    const courses = props.course;\n\n    /* testing how the data is laid off in JSON object */\n\n    /*\n    console.log( courses[0].name )\n    console.log( courses[0].parts[0].name )\n    console.log( courses[0].parts[0].exercises )\n\n    console.log( courses[1].name )\n    console.log( courses[1].parts[0].name )\n    console.log( courses[1].parts[0].exercises )\n    console.log( courses[1].parts[1].name )\n    console.log( courses[1].parts[1].exercises )\n    */\n\n    /* strategy is to create list with rendered values in special order in order to render data correctly */\n\n    var courseData = []\n\n     for (var i = 0; i < courses.length; i++) {\n\n      /* first loop adds nested list to array for each course, the first key is course name which is saved as h3 */\n\n      var appendData = []\n      var totalExercises = 0\n\n      appendData.push(<h3 key={courses[i].name}>{courses[i].name}</h3>)\n      courseData.push(appendData)\n\n      for (var j = 0; j < courses[i].parts.length; j++) {\n\n        /* second loop fills the desired details of the course - name, exercises and keeps track of the total exercises, which is rendered last */\n\n          courseData[i].push(<p key={courses[i].parts[j].name}>{courses[i].parts[j].name + ' ' + courses[i].parts[j].exercises}</p>)\n          totalExercises += courses[i].parts[j].exercises\n      }\n      appendData.push(<h4 key={courses[i].id}>total of {totalExercises} exercises</h4>)\n    }\n\n    return (\n      <div>\n          {courseData}\n      </div>\n    )\n  }\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}