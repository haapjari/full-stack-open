{"ast":null,"code":"var _jsxFileName = \"/home/haspe/University/full-stack-open/osa2/kurssitiedot/src/components/Total.js\";\nimport React from 'react';\n\nfunction myAddition(total, num) {\n  return total + num;\n}\n\nconst Total = props => {\n  var length = props.course.parts.length;\n  var totalExercises = 0; // var parts = props.course.parts;\n\n  const total = props.course.parts.reduce((s, p) => sum + parts.exercises, 0);\n  /*\n  var numbers = []\n  for (var i = 0; i < length; i++) {\n      numbers.push(props.course.parts[i].exercises);\n  }\n  */\n  // var totalAmount = orders.reduce((sum, order) => sum + order.amount, 0)\n  // totalExercises = numbers.reduce((total, num) => sum + , 0);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Number of exercises: \", total, \" \"));\n};\n\nexport default Total;","map":{"version":3,"sources":["/home/haspe/University/full-stack-open/osa2/kurssitiedot/src/components/Total.js"],"names":["React","myAddition","total","num","Total","props","length","course","parts","totalExercises","reduce","s","p","sum","exercises"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC5B,SAAOD,KAAK,GAAGC,GAAf;AACH;;AAED,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,MAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,MAAhC;AACA,MAAIG,cAAc,GAAG,CAArB,CAHqB,CAIrB;;AACA,QAAMP,KAAK,GACTG,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBE,MAAnB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAUC,GAAG,GAAGL,KAAK,CAACM,SAAjD,EAA4D,CAA5D,CADF;AAGA;;;;;;AAOA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBZ,KAAzB,MADF,CADF;AAKD,CAvBH;;AAyBA,eAAeE,KAAf","sourcesContent":["import React from 'react'\n\nfunction myAddition(total, num) {\n    return total + num;\n}\n\nconst Total = (props) => {\n\n    var length = props.course.parts.length;\n    var totalExercises = 0;\n    // var parts = props.course.parts;\n    const total = (\n      props.course.parts.reduce( (s, p) => sum + parts.exercises, 0)\n    )\n    /*\n    var numbers = []\n    for (var i = 0; i < length; i++) {\n        numbers.push(props.course.parts[i].exercises);\n    }\n    */\n\n    // var totalAmount = orders.reduce((sum, order) => sum + order.amount, 0)\n    // totalExercises = numbers.reduce((total, num) => sum + , 0);\n\n    return (\n      <div>\n        <b>Number of exercises: {total} </b>\n      </div>\n    )\n  }\n\nexport default Total;"]},"metadata":{},"sourceType":"module"}